// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/simproto.proto

#include "src/simproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_src_2fsimproto_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_src_2fsimproto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Command;
}  // namespace protobuf_src_2fsimproto_2eproto
namespace simproto {
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class ApproveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApproveRequest>
      _instance;
} _ApproveRequest_default_instance_;
class ApproveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApproveResponse>
      _instance;
} _ApproveResponse_default_instance_;
class SimConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimConfig>
      _instance;
} _SimConfig_default_instance_;
}  // namespace simproto
namespace protobuf_src_2fsimproto_2eproto {
static void InitDefaultsCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::simproto::_Command_default_instance_;
    new (ptr) ::simproto::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::simproto::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand}, {}};

static void InitDefaultsApproveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::simproto::_ApproveRequest_default_instance_;
    new (ptr) ::simproto::ApproveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::simproto::ApproveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ApproveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsApproveRequest}, {
      &protobuf_src_2fsimproto_2eproto::scc_info_Command.base,}};

static void InitDefaultsApproveResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::simproto::_ApproveResponse_default_instance_;
    new (ptr) ::simproto::ApproveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::simproto::ApproveResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApproveResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApproveResponse}, {}};

static void InitDefaultsSimConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::simproto::_SimConfig_default_instance_;
    new (ptr) ::simproto::SimConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::simproto::SimConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SimConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSimConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApproveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApproveResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimConfig.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::Command, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::Command, cwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::Command, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::Command, args_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveRequest, justification_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveResponse, approved_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::ApproveResponse, comment_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::SimConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::SimConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::SimConfig, sock_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::SimConfig, admin_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::simproto::SimConfig, approve_group_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::simproto::Command)},
  { 11, 20, sizeof(::simproto::ApproveRequest)},
  { 24, 31, sizeof(::simproto::ApproveResponse)},
  { 33, 41, sizeof(::simproto::SimConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::simproto::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::simproto::_ApproveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::simproto::_ApproveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::simproto::_SimConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "src/simproto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022src/simproto.proto\022\010simproto\"5\n\007Comman"
      "d\022\013\n\003cwd\030\001 \002(\t\022\017\n\007command\030\002 \002(\t\022\014\n\004args\030"
      "\003 \003(\t\"g\n\016ApproveRequest\022\014\n\004host\030\001 \001(\t\022\014\n"
      "\004user\030\002 \001(\t\022\"\n\007command\030\003 \001(\0132\021.simproto."
      "Command\022\025\n\rjustification\030\004 \001(\t\"4\n\017Approv"
      "eResponse\022\020\n\010approved\030\001 \002(\010\022\017\n\007comment\030\002"
      " \001(\t\"I\n\tSimConfig\022\020\n\010sock_dir\030\001 \002(\t\022\023\n\013a"
      "dmin_group\030\002 \001(\t\022\025\n\rapprove_group\030\003 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 319);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "src/simproto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_src_2fsimproto_2eproto
namespace simproto {

// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kCwdFieldNumber;
const int Command::kCommandFieldNumber;
const int Command::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_src_2fsimproto_2eproto::scc_info_Command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cwd()) {
    cwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cwd_);
  }
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command()) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  // @@protoc_insertion_point(copy_constructor:simproto.Command)
}

void Command::SharedCtor() {
  cwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:simproto.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  cwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_src_2fsimproto_2eproto::scc_info_Command.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:simproto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cwd_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      command_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string cwd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cwd().data(), static_cast<int>(this->cwd().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.Command.cwd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.Command.command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.Command.args");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cwd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cwd().data(), static_cast<int>(this->cwd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.cwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cwd(), output);
  }

  // required string command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command(), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:simproto.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string cwd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cwd().data(), static_cast<int>(this->cwd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.cwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cwd(), target);
  }

  // required string command = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command(), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.Command.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.Command)
  return target;
}

size_t Command::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:simproto.Command)
  size_t total_size = 0;

  if (has_cwd()) {
    // required string cwd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cwd());
  }

  if (has_command()) {
    // required string command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  return total_size;
}
size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simproto.Command)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string cwd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cwd());

    // required string command = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:simproto.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:simproto.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:simproto.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:simproto.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_cwd();
      cwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cwd_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:simproto.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simproto.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  args_.InternalSwap(CastToBase(&other->args_));
  cwd_.Swap(&other->cwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApproveRequest::InitAsDefaultInstance() {
  ::simproto::_ApproveRequest_default_instance_._instance.get_mutable()->command_ = const_cast< ::simproto::Command*>(
      ::simproto::Command::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApproveRequest::kHostFieldNumber;
const int ApproveRequest::kUserFieldNumber;
const int ApproveRequest::kCommandFieldNumber;
const int ApproveRequest::kJustificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApproveRequest::ApproveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_src_2fsimproto_2eproto::scc_info_ApproveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.ApproveRequest)
}
ApproveRequest::ApproveRequest(const ApproveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user()) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  justification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_justification()) {
    justification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.justification_);
  }
  if (from.has_command()) {
    command_ = new ::simproto::Command(*from.command_);
  } else {
    command_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:simproto.ApproveRequest)
}

void ApproveRequest::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  justification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = NULL;
}

ApproveRequest::~ApproveRequest() {
  // @@protoc_insertion_point(destructor:simproto.ApproveRequest)
  SharedDtor();
}

void ApproveRequest::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  justification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete command_;
}

void ApproveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApproveRequest::descriptor() {
  ::protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApproveRequest& ApproveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_src_2fsimproto_2eproto::scc_info_ApproveRequest.base);
  return *internal_default_instance();
}


void ApproveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:simproto.ApproveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      host_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      user_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      justification_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(command_ != NULL);
      command_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ApproveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.ApproveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.ApproveRequest.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.ApproveRequest.user");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .simproto.Command command = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string justification = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_justification()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->justification().data(), static_cast<int>(this->justification().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.ApproveRequest.justification");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.ApproveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.ApproveRequest)
  return false;
#undef DO_
}

void ApproveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.ApproveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // optional .simproto.Command command = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_command(), output);
  }

  // optional string justification = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->justification().data(), static_cast<int>(this->justification().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.justification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->justification(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.ApproveRequest)
}

::google::protobuf::uint8* ApproveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:simproto.ApproveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // optional string user = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // optional .simproto.Command command = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_command(), deterministic, target);
  }

  // optional string justification = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->justification().data(), static_cast<int>(this->justification().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveRequest.justification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->justification(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.ApproveRequest)
  return target;
}

size_t ApproveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simproto.ApproveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string host = 1;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional string user = 2;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user());
    }

    // optional string justification = 4;
    if (has_justification()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->justification());
    }

    // optional .simproto.Command command = 3;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *command_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApproveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:simproto.ApproveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApproveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApproveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:simproto.ApproveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:simproto.ApproveRequest)
    MergeFrom(*source);
  }
}

void ApproveRequest::MergeFrom(const ApproveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:simproto.ApproveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_justification();
      justification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.justification_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_command()->::simproto::Command::MergeFrom(from.command());
    }
  }
}

void ApproveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:simproto.ApproveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApproveRequest::CopyFrom(const ApproveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simproto.ApproveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApproveRequest::IsInitialized() const {
  if (has_command()) {
    if (!this->command_->IsInitialized()) return false;
  }
  return true;
}

void ApproveRequest::Swap(ApproveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApproveRequest::InternalSwap(ApproveRequest* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  justification_.Swap(&other->justification_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(command_, other->command_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApproveRequest::GetMetadata() const {
  protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApproveResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApproveResponse::kApprovedFieldNumber;
const int ApproveResponse::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApproveResponse::ApproveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_src_2fsimproto_2eproto::scc_info_ApproveResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.ApproveResponse)
}
ApproveResponse::ApproveResponse(const ApproveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:simproto.ApproveResponse)
}

void ApproveResponse::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approved_ = false;
}

ApproveResponse::~ApproveResponse() {
  // @@protoc_insertion_point(destructor:simproto.ApproveResponse)
  SharedDtor();
}

void ApproveResponse::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApproveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApproveResponse::descriptor() {
  ::protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApproveResponse& ApproveResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_src_2fsimproto_2eproto::scc_info_ApproveResponse.base);
  return *internal_default_instance();
}


void ApproveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:simproto.ApproveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    comment_.ClearNonDefaultToEmptyNoArena();
  }
  approved_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ApproveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.ApproveResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool approved = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_approved();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.ApproveResponse.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.ApproveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.ApproveResponse)
  return false;
#undef DO_
}

void ApproveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.ApproveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool approved = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->approved(), output);
  }

  // optional string comment = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveResponse.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->comment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.ApproveResponse)
}

::google::protobuf::uint8* ApproveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:simproto.ApproveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool approved = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->approved(), target);
  }

  // optional string comment = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.ApproveResponse.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->comment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.ApproveResponse)
  return target;
}

size_t ApproveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simproto.ApproveResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool approved = 1;
  if (has_approved()) {
    total_size += 1 + 1;
  }
  // optional string comment = 2;
  if (has_comment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApproveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:simproto.ApproveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ApproveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApproveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:simproto.ApproveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:simproto.ApproveResponse)
    MergeFrom(*source);
  }
}

void ApproveResponse::MergeFrom(const ApproveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:simproto.ApproveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (cached_has_bits & 0x00000002u) {
      approved_ = from.approved_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ApproveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:simproto.ApproveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApproveResponse::CopyFrom(const ApproveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simproto.ApproveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApproveResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void ApproveResponse::Swap(ApproveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApproveResponse::InternalSwap(ApproveResponse* other) {
  using std::swap;
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(approved_, other->approved_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApproveResponse::GetMetadata() const {
  protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimConfig::kSockDirFieldNumber;
const int SimConfig::kAdminGroupFieldNumber;
const int SimConfig::kApproveGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimConfig::SimConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_src_2fsimproto_2eproto::scc_info_SimConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.SimConfig)
}
SimConfig::SimConfig(const SimConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sock_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sock_dir()) {
    sock_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sock_dir_);
  }
  admin_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_admin_group()) {
    admin_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.admin_group_);
  }
  approve_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_approve_group()) {
    approve_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.approve_group_);
  }
  // @@protoc_insertion_point(copy_constructor:simproto.SimConfig)
}

void SimConfig::SharedCtor() {
  sock_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  admin_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approve_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SimConfig::~SimConfig() {
  // @@protoc_insertion_point(destructor:simproto.SimConfig)
  SharedDtor();
}

void SimConfig::SharedDtor() {
  sock_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  admin_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approve_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SimConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimConfig::descriptor() {
  ::protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimConfig& SimConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_src_2fsimproto_2eproto::scc_info_SimConfig.base);
  return *internal_default_instance();
}


void SimConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:simproto.SimConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sock_dir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      admin_group_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      approve_group_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SimConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.SimConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sock_dir = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sock_dir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sock_dir().data(), static_cast<int>(this->sock_dir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.SimConfig.sock_dir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string admin_group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_admin_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->admin_group().data(), static_cast<int>(this->admin_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.SimConfig.admin_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string approve_group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_approve_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->approve_group().data(), static_cast<int>(this->approve_group().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.SimConfig.approve_group");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.SimConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.SimConfig)
  return false;
#undef DO_
}

void SimConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.SimConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sock_dir = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sock_dir().data(), static_cast<int>(this->sock_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.sock_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sock_dir(), output);
  }

  // optional string admin_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->admin_group().data(), static_cast<int>(this->admin_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.admin_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->admin_group(), output);
  }

  // optional string approve_group = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->approve_group().data(), static_cast<int>(this->approve_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.approve_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->approve_group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.SimConfig)
}

::google::protobuf::uint8* SimConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:simproto.SimConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sock_dir = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sock_dir().data(), static_cast<int>(this->sock_dir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.sock_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sock_dir(), target);
  }

  // optional string admin_group = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->admin_group().data(), static_cast<int>(this->admin_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.admin_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->admin_group(), target);
  }

  // optional string approve_group = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->approve_group().data(), static_cast<int>(this->approve_group().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.SimConfig.approve_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->approve_group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.SimConfig)
  return target;
}

size_t SimConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:simproto.SimConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string sock_dir = 1;
  if (has_sock_dir()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sock_dir());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string admin_group = 2;
    if (has_admin_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->admin_group());
    }

    // optional string approve_group = 3;
    if (has_approve_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->approve_group());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:simproto.SimConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SimConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:simproto.SimConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:simproto.SimConfig)
    MergeFrom(*source);
  }
}

void SimConfig::MergeFrom(const SimConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:simproto.SimConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sock_dir();
      sock_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sock_dir_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_admin_group();
      admin_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.admin_group_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_approve_group();
      approve_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.approve_group_);
    }
  }
}

void SimConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:simproto.SimConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimConfig::CopyFrom(const SimConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:simproto.SimConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SimConfig::Swap(SimConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimConfig::InternalSwap(SimConfig* other) {
  using std::swap;
  sock_dir_.Swap(&other->sock_dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  admin_group_.Swap(&other->admin_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  approve_group_.Swap(&other->approve_group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimConfig::GetMetadata() const {
  protobuf_src_2fsimproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_src_2fsimproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace simproto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::simproto::Command* Arena::CreateMaybeMessage< ::simproto::Command >(Arena* arena) {
  return Arena::CreateInternal< ::simproto::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::simproto::ApproveRequest* Arena::CreateMaybeMessage< ::simproto::ApproveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::simproto::ApproveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::simproto::ApproveResponse* Arena::CreateMaybeMessage< ::simproto::ApproveResponse >(Arena* arena) {
  return Arena::CreateInternal< ::simproto::ApproveResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::simproto::SimConfig* Arena::CreateMaybeMessage< ::simproto::SimConfig >(Arena* arena) {
  return Arena::CreateInternal< ::simproto::SimConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
